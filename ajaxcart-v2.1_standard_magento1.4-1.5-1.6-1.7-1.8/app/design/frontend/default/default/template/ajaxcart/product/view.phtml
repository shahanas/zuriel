<?php 
	/**
	 * ajaxcart template
	 */
?>
<?php $_helper = Mage::helper('ajaxcart') ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
	<a href="#" title="<?php echo $this->__('Close') ?>" class="close-popup" alt="<?php echo $this->__('Close') ?>" onclick="closeAjaxPopup();return false;"><em><?php echo $this->__('Close')?></em></a>
<form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
	<?php echo $this->getStartFormHtml() ?>
	<div class="no-display">
		<input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
		<input type="hidden" name="related_product" id="related-products-field" value="" />
	</div>
	<?php if ($this->hasOptions()): ?>
		<?php echo $this->getOptionsWrapperHtml() ?>
	<?php endif ?>
	<?php echo $this->getOptionsWrapperBottomHtml() ?>
	<?php echo $this->getEndFormHtml() ?>
</form>
<div style="display: none;">
    <div id="ajaxcart-add-loading" class="ajaxcart-add-loading">
        <?php $_label = $this->isEditItem() ? $this->__('Updating cart') : $this->__('Adding to cart') ?>
        <img alt="<?php echo $_label ?>..." src="<?php echo $this->getUrlImage( );?>" />
        <span><?php echo $_label ?>...</span>
    </div>
</div>
<script type="text/javascript">
//<![CDATA[
    if ($('product_addtocart_form').down('p.availability')){
        (function(){
            var removeEl = $('product_addtocart_form').down('p.availability');
            var parentEl = $(removeEl.parentNode);
            parentEl.removeChild(removeEl);
            removeEl = $('product_addtocart_form').down('div.price-box');
            parentEl = $(removeEl.parentNode);
            parentEl.removeChild(removeEl);
        })();
        // $('product_addtocart_form').removeChild($('product_addtocart_form').down('p.availability'));
        // $('product_addtocart_form').removeChild($('product_addtocart_form').down('div.price-box'));
    }
        
    var idP = <?php echo $_product->getId();?>;
        if(!$('product-price-'+idP)){
           if($('product-price-'+idP+'_clone')){
               $('product-price-'+idP+'_clone').id = 'product-price-'+idP;
           }

           if($('old-price-'+idP+'_clone')){
                $('old-price-'+idP+'_clone').id = 'old-price-'+idP;
           }
        }

	var productAddToCartForm = new VarienForm('product_addtocart_form');
	productAddToCartForm.submit = function(button, url) {
		if (this.validator.validate()) {
			var form = this.form;
			var oldUrl = form.action;
			if (url) {
			   form.action = url;
			}
			var e = null;
			try {
                // Inline add to cart
                var sBtn = $(button);
                sBtn.hide();
                sBtn.parentNode.appendChild(Element.clone($('ajaxcart-add-loading'), 1));
                // Adding to cart animation
            <?php if (!$this->isEditItem() && $_helper->getConfig('allow_animation')): ?>
                <?php if ($_helper->getConfig('animation_target')): ?>
                    var target = $$('.top-link-cart').first();
                    if (target) target = $(target.parentNode);
                <?php else: ?>
                    var target = $$('<?php echo $_helper->getMiniCartClass() ? $_helper->getMiniCartClass() : 'none' ?>').first();
                <?php endif ?>
             var urlCurent = '<?php echo $this->isCartPage();?>';
             if (urlCurent.search('isajaxcartpage') == -1){
             if (target && $('ajaxcart-content').down('.product-image')) {
                
                new AjaxcartAnimation('ajaxcart-animation', target, true, $('ajaxcart-content').down('.product-image'),<?php echo $this->getAutoScroll() ? 'true' : 'false' ?>, function() {
                    ajaxcart.allowFinish = true;
                    if (ajaxcart.responseCache) ajaxcart.addToCartFinish(ajaxcart.responseCache);
                });
                ajaxcart.allowFinish = false;
            }
            }
            <?php endif ?>
                var inputElements = Form.getElements(form);
                var formElements = [];
                var el;
                for (var i=0; i<inputElements.length; i++) {
                    el = inputElements[i];
                    if (el.value == '') {
                        continue;
                    }
                    formElements[formElements.length] = el;
                }
                ajaxcart.addToCartHandle(form.action,Form.serializeElements(formElements));
                //ajaxcart.addToCartHandle(form.action,form.serialize());
			} catch (e) {}
			this.form.action = oldUrl;
			if (e) {
				throw e;
			}
			if (button && button != 'undefined') {
				button.disabled = true;
			}
		}
	}.bind(productAddToCartForm);
    
    if ($('ajaxcart-content').down('button.btn-cart')) {
        $('ajaxcart-content').down('button.btn-cart').onclick = function(event) {
            productAddToCartForm.submit(this);
        }
    }

	productAddToCartForm.submitLight = function(button, url){
		if(this.validator) {
			var nv = Validation.methods;
			delete Validation.methods['required-entry'];
			delete Validation.methods['validate-one-required'];
			delete Validation.methods['validate-one-required-by-name'];
			if (this.validator.validate()) {
				if (url) {
					this.form.action = url;
				}
                // Inline add to cart
                var sBtn = $(button);
                sBtn.hide();
                sBtn.parentNode.appendChild(Element.clone($('ajaxcart-add-loading'), 1));
				ajaxcart.addToCartHandle(this.form.action,this.form.serialize());
			}
			Object.extend(Validation.methods, nv);
		}
	}.bind(productAddToCartForm);
//]]>
</script>

